{"ast":null,"code":"var _jsxFileName = \"/home/asif/Desktop/cafe_club/client/src/components/Food/FoodList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./foodListStyles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FoodList() {\n  _s();\n\n  const {\n    categoryId\n  } = useParams();\n  const [foods, setFoods] = useState(null);\n  useEffect(() => {\n    let food_list = [];\n    demofood.map(food => food.category_id == categoryId ? food_list.push(food) : null);\n  }, [categoryId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_s(FoodList, \"ZEiDRLKhHiJtjSZCjGGGk+99GI4=\", false, function () {\n  return [useParams];\n});\n\n_c = FoodList;\nexport default FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/home/asif/Desktop/cafe_club/client/src/components/Food/FoodList.jsx"],"names":["React","useEffect","useState","useParams","FoodList","categoryId","foods","setFoods","food_list","demofood","map","food","category_id","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,sBAAP;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAiBF,SAAS,EAAhC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAS,GAAG,EAAhB;AACAC,IAAAA,QAAQ,CAACC,GAAT,CAAcC,IAAD,IACXA,IAAI,CAACC,WAAL,IAAoBP,UAApB,GAAiCG,SAAS,CAACK,IAAV,CAAeF,IAAf,CAAjC,GAAwD,IAD1D;AAGD,GALQ,EAKN,CAACN,UAAD,CALM,CAAT;AAMA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAVQD,Q;UACgBD,S;;;KADhBC,Q;AAYT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"./foodListStyles.css\";\nfunction FoodList() {\n  const { categoryId } = useParams();\n  const [foods, setFoods] = useState(null);\n  useEffect(() => {\n    let food_list = [];\n    demofood.map((food) =>\n      food.category_id == categoryId ? food_list.push(food) : null\n    );\n  }, [categoryId]);\n  return <div></div>;\n}\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}