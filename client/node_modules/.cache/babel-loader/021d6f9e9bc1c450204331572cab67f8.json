{"ast":null,"code":"var _jsxFileName = \"/home/asif/Desktop/cafe_club/client/src/components/Auth/Signup.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, TextField, Tooltip, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport \"./authStyles.css\";\nimport { Link } from \"react-router-dom\";\nimport Navigation from \"../Navigation/Navigation\";\nimport useMethods from \"../../StateProvider/useMethods\"; // ===============================================\n// ===============================================\n// ===============================================\n// ===============================================\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = Yup.object({\n  username: Yup.string().min(3).max(20).required(),\n  email: Yup.string().email().required(),\n  password: Yup.string().min(5).max(50).required(),\n  confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null]).required()\n}); // ===============================================\n// ===============================================\n// ===============================================\n// ===============================================\n\nfunction Signup() {\n  _s();\n\n  const {\n    signup\n  } = useMethods();\n  const {\n    control,\n    formState: {\n      errors\n    },\n    handleSubmit\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n\n  const onSubmit = data => {\n    signup(data);\n  }; // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h3\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"username\",\n          control: control,\n          render: _ref => {\n            let {\n              field\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"text\",\n              label: \"username\",\n              variant: \"outlined\",\n              size: \"small\",\n              ...field,\n              placeholder: \"username...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          color: \"secondary\",\n          children: errors.username && errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"email\",\n          control: control,\n          render: _ref2 => {\n            let {\n              field\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"email\",\n              label: \"email\",\n              variant: \"outlined\",\n              size: \"small\",\n              ...field,\n              placeholder: \"email...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          color: \"secondary\",\n          children: errors.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"password\",\n          control: control,\n          render: _ref3 => {\n            let {\n              field\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"password\",\n              variant: \"outlined\",\n              size: \"small\",\n              ...field,\n              placeholder: \"password...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          color: \"secondary\",\n          children: errors.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"confirmPassword\",\n          control: control,\n          render: _ref4 => {\n            let {\n              field\n            } = _ref4;\n            return /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              label: \"confirm password\",\n              variant: \"outlined\",\n              size: \"small\",\n              ...field\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body2\",\n          color: \"secondary\",\n          children: errors.confirmPassword && errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"Click for login\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: \"form-option\",\n              component: Link,\n              to: \"/login\",\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: \"All ready have an account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Signup, \"DzKz30cjc65S+cDj8596ZiyUxyM=\", false, function () {\n  return [useMethods, useForm];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/asif/Desktop/cafe_club/client/src/components/Auth/Signup.jsx"],"names":["Button","TextField","Tooltip","Typography","React","useForm","Controller","Yup","yupResolver","Link","Navigation","useMethods","schema","object","username","string","min","max","required","email","password","confirmPassword","oneOf","ref","Signup","signup","control","formState","errors","handleSubmit","resolver","onSubmit","data","field"],"mappings":"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","sourcesContent":["import { Button, TextField, Tooltip, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport * as Yup from \"yup\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport \"./authStyles.css\";\nimport { Link } from \"react-router-dom\";\nimport Navigation from \"../Navigation/Navigation\";\nimport useMethods from \"../../StateProvider/useMethods\";\n\n// ===============================================\n// ===============================================\n// ===============================================\n// ===============================================\nconst schema = Yup.object({\n  username: Yup.string().min(3).max(20).required(),\n  email: Yup.string().email().required(),\n  password: Yup.string().min(5).max(50).required(),\n  confirmPassword: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null])\n    .required(),\n});\n// ===============================================\n// ===============================================\n// ===============================================\n// ===============================================\nfunction Signup() {\n  const { signup } = useMethods();\n  const {\n    control,\n    formState: { errors },\n    handleSubmit,\n  } = useForm({ resolver: yupResolver(schema) });\n  const onSubmit = (data) => {\n    signup(data);\n  };\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  // ===============================================\n  return (\n    <>\n      <Navigation />\n      <br />\n      <br />\n      <div className=\"form-container\">\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n          <Typography gutterBottom variant=\"h3\">\n            Signup\n          </Typography>\n          <Controller\n            name=\"username\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                type=\"text\"\n                label=\"username\"\n                variant=\"outlined\"\n                size=\"small\"\n                {...field}\n                placeholder=\"username...\"\n              />\n            )}\n          />\n          <Typography gutterBottom variant=\"body2\" color=\"secondary\">\n            {errors.username && errors.username}\n          </Typography>\n\n          <Controller\n            name=\"email\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                type=\"email\"\n                label=\"email\"\n                variant=\"outlined\"\n                size=\"small\"\n                {...field}\n                placeholder=\"email...\"\n              />\n            )}\n          />\n\n          <Typography gutterBottom variant=\"body2\" color=\"secondary\">\n            {errors.email && errors.email}\n          </Typography>\n\n          <Controller\n            name=\"password\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                type=\"password\"\n                label=\"password\"\n                variant=\"outlined\"\n                size=\"small\"\n                {...field}\n                placeholder=\"password...\"\n              />\n            )}\n          />\n\n          <Typography gutterBottom variant=\"body2\" color=\"secondary\">\n            {errors.password && errors.password}\n          </Typography>\n\n          <Controller\n            name=\"confirmPassword\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                type=\"password\"\n                label=\"confirm password\"\n                variant=\"outlined\"\n                size=\"small\"\n                {...field}\n              />\n            )}\n          />\n\n          <Typography gutterBottom variant=\"body2\" color=\"secondary\">\n            {errors.confirmPassword && errors.confirmPassword}\n          </Typography>\n\n          <div className=\"form-footer\">\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Sign Up\n            </Button>\n\n            <Tooltip title=\"Click for login\">\n              <Typography\n                className=\"form-option\"\n                component={Link}\n                to=\"/login\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n              >\n                All ready have an account?\n              </Typography>\n            </Tooltip>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}