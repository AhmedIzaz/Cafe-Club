{"ast":null,"code":"var _jsxFileName = \"/home/asif/Desktop/cafe_club/client/src/components/Food/FoodList.jsx\",\n    _s = $RefreshSig$();\n\nimport { Card, CardActions, CardContent, Grid, IconButton, Tooltip, Typography } from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./foodListStyles.css\";\nimport Navigation from \"../Navigation/Navigation\";\nimport { useStateValue } from \"../../StateProvider/StateContext\";\nimport useMethods from \"../../StateProvider/useMethods\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FoodList() {\n  _s();\n\n  const [state] = useStateValue();\n  const {\n    add_to_cart\n  } = useMethods();\n  const {\n    category_id,\n    category_name\n  } = useParams();\n  const [foods, setFoods] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:8000/category/category-foods/${category_id}`).then(response => {\n      if (response.status !== 200) return alert(response.data.error);\n      setFoods(response.data.foods);\n    }).catch(error => alert(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"food-list-page\",\n      children: foods.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"food-item-name\",\n          children: [\"Items of \", category_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          spacing: 2,\n          container: true,\n          children: foods.map(food => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 10,\n            sm: 6,\n            md: 4,\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                borderRadius: \"1em\"\n              },\n              className: \"food-item\",\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                component: Link,\n                to: `/food-description/${food._id}`,\n                className: \"food-item-description\",\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textPrimary\",\n                  variant: \"h6\",\n                  children: food.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"textSecondary\",\n                  children: food.description.slice(0, 20) + \"...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, this), state.user && state.token && /*#__PURE__*/_jsxDEV(CardActions, {\n                className: \"food-item-actions\",\n                children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Add to Order Cart!\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => add_to_cart(food),\n                    children: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        className: \"for-no-food\",\n        children: \"There is no food for this category..Sorry!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FoodList, \"RLXd1xN3a6QzmzhYn4jvJJiTowU=\", false, function () {\n  return [useStateValue, useMethods, useParams];\n});\n\n_c = FoodList;\nexport default FoodList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FoodList\");","map":{"version":3,"sources":["/home/asif/Desktop/cafe_club/client/src/components/Food/FoodList.jsx"],"names":["Card","CardActions","CardContent","Grid","IconButton","Tooltip","Typography","Add","React","useEffect","useState","Link","useParams","Navigation","useStateValue","useMethods","axios","FoodList","state","add_to_cart","category_id","category_name","foods","setFoods","get","then","response","status","alert","data","error","catch","length","map","food","borderRadius","_id","name","description","slice","user","token"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,UAPF,QAQO,mBARP;AASA,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,aAAT,QAA8B,kCAA9B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,KAAD,IAAUJ,aAAa,EAA7B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC;AACA,QAAM;AAAEK,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAiCT,SAAS,EAAhD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CACFQ,GADH,CACQ,iDAAgDJ,WAAY,EADpE,EAEGK,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,OAAOC,KAAK,CAACF,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAZ;AAC7BP,MAAAA,QAAQ,CAACG,QAAQ,CAACG,IAAT,CAAcP,KAAf,CAAR;AACD,KALH,EAMGS,KANH,CAMUD,KAAD,IAAWF,KAAK,CAACE,KAAD,CANzB;AAOD,GARQ,EAQN,EARM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGR,KAAK,CAACU,MAAN,GAAe,CAAf,gBACC;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,gBAAd;AAAA,kCAAyCX,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,OAAO,EAAE,CAAf;AAAkB,UAAA,SAAS,MAA3B;AAAA,oBACGC,KAAK,CAACW,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAmB,YAAA,EAAE,EAAE,CAAvB;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,EAAE,EAAE,CAArC;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,YAAY,EAAE;AAAhB,eAAb;AAAsC,cAAA,SAAS,EAAC,WAAhD;AAAA,sCACE,QAAC,WAAD;AACE,gBAAA,SAAS,EAAExB,IADb;AAEE,gBAAA,EAAE,EAAG,qBAAoBuB,IAAI,CAACE,GAAI,EAFpC;AAGE,gBAAA,SAAS,EAAC,uBAHZ;AAAA,wCAKE,QAAC,UAAD;AAAY,kBAAA,KAAK,EAAC,aAAlB;AAAgC,kBAAA,OAAO,EAAC,IAAxC;AAAA,4BACGF,IAAI,CAACG;AADR;AAAA;AAAA;AAAA;AAAA,wBALF,eAQE,QAAC,UAAD;AAAY,kBAAA,OAAO,EAAC,OAApB;AAA4B,kBAAA,KAAK,EAAC,eAAlC;AAAA,4BACGH,IAAI,CAACI,WAAL,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0B,EAA1B,IAAgC;AADnC;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAcGrB,KAAK,CAACsB,IAAN,IAActB,KAAK,CAACuB,KAApB,iBACC,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC,mBAAvB;AAAA,uCACE,QAAC,OAAD;AAAS,kBAAA,KAAK,EAAC,oBAAf;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAE,MAAMtB,WAAW,CAACe,IAAD,CAAtC;AAAA,2CACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADD,gBAmCC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAyB,QAAA,SAAS,EAAC,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApCJ;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAiDD;;GA/DQjB,Q;UACSH,a,EACQC,U,EACeH,S;;;KAHhCK,Q;AAiET,eAAeA,QAAf","sourcesContent":["import {\n  Card,\n  CardActions,\n  CardContent,\n  Grid,\n  IconButton,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport \"./foodListStyles.css\";\nimport Navigation from \"../Navigation/Navigation\";\nimport { useStateValue } from \"../../StateProvider/StateContext\";\nimport useMethods from \"../../StateProvider/useMethods\";\nimport axios from \"axios\";\n\nfunction FoodList() {\n  const [state] = useStateValue();\n  const { add_to_cart } = useMethods();\n  const { category_id, category_name } = useParams();\n  const [foods, setFoods] = useState([]);\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8000/category/category-foods/${category_id}`)\n      .then((response) => {\n        if (response.status !== 200) return alert(response.data.error);\n        setFoods(response.data.foods);\n      })\n      .catch((error) => alert(error));\n  }, []);\n  return (\n    <>\n      <Navigation />\n\n      <br />\n      <br />\n      <div className=\"food-list-page\">\n        {foods.length > 0 ? (\n          <>\n            <h2 className=\"food-item-name\">Items of {category_name}</h2>\n            <Grid spacing={2} container>\n              {foods.map((food) => (\n                <Grid item xs={10} sm={6} md={4} lg={3}>\n                  <Card style={{ borderRadius: \"1em\" }} className=\"food-item\">\n                    <CardContent\n                      component={Link}\n                      to={`/food-description/${food._id}`}\n                      className=\"food-item-description\"\n                    >\n                      <Typography color=\"textPrimary\" variant=\"h6\">\n                        {food.name}\n                      </Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {food.description.slice(0, 20) + \"...\"}\n                      </Typography>\n                    </CardContent>\n\n                    {state.user && state.token && (\n                      <CardActions className=\"food-item-actions\">\n                        <Tooltip title=\"Add to Order Cart!\">\n                          <IconButton onClick={() => add_to_cart(food)}>\n                            <Add />\n                          </IconButton>\n                        </Tooltip>\n                      </CardActions>\n                    )}\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </>\n        ) : (\n          <Typography variant=\"h3\" className=\"for-no-food\">\n            There is no food for this category..Sorry!\n          </Typography>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default FoodList;\n"]},"metadata":{},"sourceType":"module"}