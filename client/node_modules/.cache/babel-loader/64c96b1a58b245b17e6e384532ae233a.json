{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useStateValue } from \"./StateContext\";\n\nfunction useMethods() {\n  _s();\n\n  const auth_base_url = \"http://localhost:8000/auth\";\n  const cart_base_url = \"http://localhost:8000/cart\";\n  const category_base_url = \"http://localhost:8000/category\";\n  const [state, dispatch] = useStateValue();\n  const navigate = useNavigate(); ////======================================\n  ////======================================\n\n  const login = _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    axios.post(`${auth_base_url}/login`, {\n      email,\n      password\n    }).then(response => {\n      if (!response.data.user || !response.data.token) return alert(\"Password doesn't match!\");\n      const {\n        user,\n        token,\n        carts,\n        orders\n      } = response.data;\n      dispatch({\n        type: \"ADD_USER\",\n        user\n      });\n      dispatch({\n        type: \"ADD_TOKEN\",\n        token\n      });\n      dispatch({\n        type: \"ADD_CARTS\",\n        carts\n      });\n      dispatch({\n        type: \"ADD_ORDERS\",\n        orders\n      });\n      sessionStorage.setItem(\"user\", JSON.stringify(user));\n      sessionStorage.setItem(\"token\", token);\n      return navigate(\"/\");\n    }).catch(() => {\n      return alert(\"Password doesn't match!\");\n    });\n  }; ////======================================\n  ////======================================\n\n\n  const signup = data => {\n    axios.post(`${auth_base_url}/signup`, { ...data\n    }).then(response => {\n      var _response$data, _response$data2;\n\n      if (response.data.status !== 200) return alert(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.message) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.error));\n      alert(response.data.message);\n      return navigate(\"/login\");\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  const logout = () => {\n    dispatch({\n      type: \"DELETE_EVERYTHING\"\n    });\n    sessionStorage.clear();\n    return navigate(\"/\");\n  }; ////======================================\n  ////======================================\n\n\n  const get_category_list = () => {\n    axios.get(`${category_base_url}/category-list`).then(response => {\n      if (response.status !== 200) return alert(response.data.error);\n      dispatch({\n        type: \"ADD_CATEGORIES\",\n        categories: response.data.categories\n      });\n      return;\n    }).catch(error => alert(error.message));\n  }; ////======================================\n  ////======================================\n\n\n  const get_carts_and_orders = (user, token) => {\n    axios.post(`${auth_base_url}/get-carts-and-orders`, {\n      token\n    }).then(response => {\n      if (response.status !== 200) return alert(response.data.error);\n      dispatch({\n        type: \"ADD_TOKEN\",\n        token\n      });\n      dispatch({\n        type: \"ADD_USER\",\n        user: JSON.parse(user)\n      });\n      dispatch({\n        type: \"ADD_CARTS\",\n        carts: response.data.carts\n      });\n      dispatch({\n        type: \"ADD_ORDERS\",\n        orders: response.data.orders\n      });\n      return navigate(-1);\n    }).catch(error => alert(error));\n  }; ////======================================\n  ////======================================\n\n\n  const add_to_cart = async food_id => {\n    const cart_exist = state.carts.filter(cart => cart.food_id == food_id);\n    if (cart_exist.length > 0) return alert(\"cart already added!\");\n    const {\n      data\n    } = await axios.post(`${cart_base_url}/create-cart`, {\n      food_id,\n      token: state.token\n    });\n    if (!data.cart) return alert(\"can't add to cart! please try again letter!\");\n    dispatch({\n      type: \"ADD_TO_CARTS\",\n      cart: data.cart\n    });\n    return;\n  }; ////======================================\n  ////======================================\n\n\n  const change_quantity = async (value, cart) => {\n    try {\n      if (value < 1) return;\n      const index = state.carts.indexOf(cart);\n      const carts = state.carts;\n      const {\n        data\n      } = await axios.post(`${cart_base_url}/change-quantity`, {\n        value,\n        cart_id: cart._id,\n        token: state.token\n      });\n      if (!data.cart_updated) return alert(\"Cart quantity doesn't update!Please try again!\");\n      carts[index] = data.updated_cart;\n      dispatch({\n        type: \"CHANGE_CART_QUANTITY\",\n        carts\n      });\n      return;\n    } catch (error) {\n      return alert(\"Cart quantity cant changed!\");\n    }\n  }; ////======================================\n  ////======================================\n\n\n  const remove_cart = cart_id => {\n    axios.post(`${cart_base_url}/remove-cart`, {\n      cart_id,\n      token: state.token\n    }).then(response => {\n      if (response.status !== 200) return alert(\"Cart  doesn't deleted ! Please try again!\");\n      const carts = state.carts.filter(cart => cart._id != cart_id);\n      return dispatch({\n        type: \"REMOVE_FROM_CARTS\",\n        carts\n      });\n    }).catch(error => alert(error.message));\n  }; ////======================================\n  ////======================================\n\n\n  const delete_user_carts = () => {\n    axios.post(`${cart_base_url}/delete-user-carts`, {\n      token: state.token\n    }).then(response => {\n      if (response.status == 200) return navigate(\"/\");\n      return alert(\"Can't delete carts.. Please try again letter!\");\n    }).catch();\n  };\n\n  return {\n    get_carts_and_orders,\n    get_category_list,\n    login,\n    signup,\n    logout,\n    add_to_cart,\n    change_quantity,\n    remove_cart,\n    delete_user_carts\n  };\n}\n\n_s(useMethods, \"Y9CzdkAdpfCTXAlzqbhzxeemAUo=\", false, function () {\n  return [useStateValue, useNavigate];\n});\n\nexport default useMethods;","map":{"version":3,"sources":["/home/asif/Desktop/cafe_club/client/src/StateProvider/useMethods.jsx"],"names":["axios","useNavigate","useStateValue","useMethods","auth_base_url","cart_base_url","category_base_url","state","dispatch","navigate","login","email","password","post","then","response","data","user","token","alert","carts","orders","type","sessionStorage","setItem","JSON","stringify","catch","signup","status","message","error","logout","clear","get_category_list","get","categories","get_carts_and_orders","parse","add_to_cart","food_id","cart_exist","filter","cart","length","change_quantity","value","index","indexOf","cart_id","_id","cart_updated","updated_cart","remove_cart","delete_user_carts"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useStateValue } from \"./StateContext\";\n\nfunction useMethods() {\n  const auth_base_url = \"http://localhost:8000/auth\";\n  const cart_base_url = \"http://localhost:8000/cart\";\n  const category_base_url = \"http://localhost:8000/category\";\n  const [state, dispatch] = useStateValue();\n  const navigate = useNavigate();\n  ////======================================\n  ////======================================\n  const login = ({ email, password }) => {\n    axios\n      .post(`${auth_base_url}/login`, { email, password })\n      .then((response) => {\n        if (!response.data.user || !response.data.token)\n          return alert(\"Password doesn't match!\");\n        const { user, token, carts, orders } = response.data;\n        dispatch({ type: \"ADD_USER\", user });\n        dispatch({ type: \"ADD_TOKEN\", token });\n        dispatch({ type: \"ADD_CARTS\", carts });\n        dispatch({ type: \"ADD_ORDERS\", orders });\n        sessionStorage.setItem(\"user\", JSON.stringify(user));\n        sessionStorage.setItem(\"token\", token);\n        return navigate(\"/\");\n      })\n      .catch(() => {\n        return alert(\"Password doesn't match!\");\n      });\n  };\n  ////======================================\n  ////======================================\n  const signup = (data) => {\n    axios\n      .post(`${auth_base_url}/signup`, { ...data })\n      .then((response) => {\n        if (response.data.status !== 200)\n          return alert(response.data?.message || response.data?.error);\n        alert(response.data.message);\n        return navigate(\"/login\");\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  const logout = () => {\n    dispatch({ type: \"DELETE_EVERYTHING\" });\n    sessionStorage.clear();\n    return navigate(\"/\");\n  };\n  ////======================================\n  ////======================================\n  const get_category_list = () => {\n    axios\n      .get(`${category_base_url}/category-list`)\n      .then((response) => {\n        if (response.status !== 200) return alert(response.data.error);\n        dispatch({\n          type: \"ADD_CATEGORIES\",\n          categories: response.data.categories,\n        });\n        return;\n      })\n      .catch((error) => alert(error.message));\n  };\n  ////======================================\n  ////======================================\n  const get_carts_and_orders = (user, token) => {\n    axios\n      .post(`${auth_base_url}/get-carts-and-orders`, { token })\n      .then((response) => {\n        if (response.status !== 200) return alert(response.data.error);\n        dispatch({ type: \"ADD_TOKEN\", token });\n        dispatch({ type: \"ADD_USER\", user: JSON.parse(user) });\n        dispatch({ type: \"ADD_CARTS\", carts: response.data.carts });\n        dispatch({ type: \"ADD_ORDERS\", orders: response.data.orders });\n        return navigate(-1);\n      })\n      .catch((error) => alert(error));\n  };\n  ////======================================\n  ////======================================\n  const add_to_cart = async (food_id) => {\n    const cart_exist = state.carts.filter((cart) => cart.food_id == food_id);\n    if (cart_exist.length > 0) return alert(\"cart already added!\");\n    const { data } = await axios.post(`${cart_base_url}/create-cart`, {\n      food_id,\n      token: state.token,\n    });\n    if (!data.cart) return alert(\"can't add to cart! please try again letter!\");\n    dispatch({ type: \"ADD_TO_CARTS\", cart: data.cart });\n    return;\n  };\n  ////======================================\n  ////======================================\n  const change_quantity = async (value, cart) => {\n    try {\n      if (value < 1) return;\n      const index = state.carts.indexOf(cart);\n      const carts = state.carts;\n      const { data } = await axios.post(`${cart_base_url}/change-quantity`, {\n        value,\n        cart_id: cart._id,\n        token: state.token,\n      });\n      if (!data.cart_updated)\n        return alert(\"Cart quantity doesn't update!Please try again!\");\n      carts[index] = data.updated_cart;\n      dispatch({\n        type: \"CHANGE_CART_QUANTITY\",\n        carts,\n      });\n      return;\n    } catch (error) {\n      return alert(\"Cart quantity cant changed!\");\n    }\n  };\n  ////======================================\n  ////======================================\n  const remove_cart = (cart_id) => {\n    axios\n      .post(`${cart_base_url}/remove-cart`, { cart_id, token: state.token })\n      .then((response) => {\n        if (response.status !== 200)\n          return alert(\"Cart  doesn't deleted ! Please try again!\");\n        const carts = state.carts.filter((cart) => cart._id != cart_id);\n        return dispatch({ type: \"REMOVE_FROM_CARTS\", carts });\n      })\n      .catch((error) => alert(error.message));\n  };\n  ////======================================\n  ////======================================\n  const delete_user_carts = () => {\n    axios\n      .post(`${cart_base_url}/delete-user-carts`, {\n        token: state.token,\n      })\n      .then((response) => {\n        if (response.status == 200) return navigate(\"/\");\n        return alert(\"Can't delete carts.. Please try again letter!\");\n      })\n      .catch();\n  };\n  return {\n    get_carts_and_orders,\n    get_category_list,\n    login,\n    signup,\n    logout,\n    add_to_cart,\n    change_quantity,\n    remove_cart,\n    delete_user_carts,\n  };\n}\n\nexport default useMethods;\n"]},"metadata":{},"sourceType":"module"}